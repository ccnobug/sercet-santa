{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","App","useState","name","setName","email","setEmail","show","setShow","data","setData","result","setResult","error","setError","switchHandler","event","console","log","target","checked","getOption","n","Switch","onChange","onClick","key","copyData","deleteRecord","ThemeProvider","Container","maxWidth","style","backgroundColor","minHeight","backgroundSize","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","Object","keys","map","i","display","justifyContent","alignItems","type","id","value","e","required","Fab","color","Button","variant","JSON","stringify","axios","post","then","response","_","isEmpty","show_result","Alert","severity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc6a372d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme, withTheme } from '@mui/material/styles';\nimport {blue, green, red} from '@mui/material/colors' ;\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Switch from '@mui/material/Switch';\nimport { SettingsInputHdmiTwoTone } from '@mui/icons-material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Alert from '@mui/material/Alert';\nimport _ from 'lodash';\nimport './App.css';\n\n\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [show, setShow] = useState({})\n  const [data, setData] = useState({});\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(false);\n\n  const changeName = (value) => {\n    setName(value);\n  }\n  \n  const changeEmail= (value) => {\n    setEmail(value);\n  }\n\n  const submitFormHandler= () => {\n    setData({...data, [name]:email}) \n    setName(\"\");\n    setEmail(\"\");\n  }\n\n  const deleteRecord= (key) => {\n    const copyData= {...data}\n    delete copyData[key]\n    setData(copyData)\n  }\n\n  const sendDataBE = () => {\n    const json_data = JSON.stringify(data)\n    axios.post('/generator', data)\n        .then(response => {\n              console.log(response);\n              console.log(_.isEmpty(response.data));\n              if (!_.isEmpty(response.data)){\n                console.log(response.data);\n                console.log(\"no error\");\n                setResult(response.data);\n                const show_result = {};\n                for (const key in response.data) {\n                  show_result[key] = false;\n                }\n                setShow(show_result);\n              }else{\n                console.log(\"error\");\n                setError(true);\n              }\n                \n            })\n        \n  }\n\n  const switchHandler = (event) => {\n    console.log(event);\n    setShow({\n      ...show,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const getOption = (n) =>{\n    if (result !== null) {\n      if (show[n]) {\n        return <td> {result[n]} <Switch checked={show[n]} name={n} onChange={switchHandler}></Switch></td>\n      }else {\n        return <td> *** <Switch checked={show[n]} name={n} onChange={switchHandler}></Switch></td>\n      }\n    } else {\n      return <DeleteIcon onClick={() => {deleteRecord(n)}}/>\n    }\n  }\n\n  const showError = () => {\n    if (error === true){\n      return <Alert severity=\"error\">Generate failed. Please try it again.</Alert>\n    }\n  }\n  // useEffect(async () => {\n  //   const resp = await axios.get(\"/test\");\n  //   console.log(resp);\n  // }, [])\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n      <Container\n        maxWidth={false}\n        style={{\n          backgroundColor: '#2B4176',\n          minHeight : '100vh',\n          backgroundSize: \"cover\",\n        }}\n      >\n        <h1>Secret Santa Generator</h1>\n        <h2>Enjoy ~</h2>\n\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell> Name</TableCell>\n                <TableCell>Email</TableCell>\n                {result && <TableCell> Secret Santa</TableCell>}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(data).map((n, i) => {\n                return <TableRow key={i}>\n                        <TableCell>{n}</TableCell> \n                        <TableCell>{data[n]}</TableCell> \n                        {getOption(n)}\n                    </TableRow>})}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <form style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}> \n          <label>\n            <AccountCircle />\n            Name:\n            <input \n            type=\"text\" \n            id=\"name\"\n            value={name}\n            onChange={(e) => changeName(e.target.value)}\n            required/>\n          </label>\n          <label>\n            Email:\n            <input type=\"text\" id=\"email\" value={email} onChange={(e) => changeEmail(e.target.value)}\n            required/>\n          </label>\n          <Fab color=\"primary\" aria-label=\"add\">\n            <AddIcon onClick={submitFormHandler}/>\n          </Fab>\n        </form>\n        <Button variant=\"contained\" onClick={sendDataBE} style={{justifyContent: 'center'}}>Generate Now!\n        </Button>\n        {error && <Alert severity=\"error\">Generate failed. Please try it again.</Alert>}\n        <br></br>\n      </Container>\n      </ThemeProvider>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}