{"ast":null,"code":"var _jsxFileName = \"/Users/chenliu/Desktop/project/secret-santa/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme, withTheme } from '@mui/material/styles';\nimport { blue, green, red } from '@mui/material/colors';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameList, setNamelist] = useState([]);\n  const [emailList, setEmaillist] = useState([]); // const changeName = (value) => {\n  //   setName(value);\n  //   setNamelist([...nameList, value]);\n  //   console.log(nameList);\n  // }\n\n  const changeName = value => {\n    setName(value);\n  };\n\n  const changeEmail = value => {\n    setEmail(value);\n    setEmaillist([...emailList, value]);\n  };\n\n  const appendName = () => {\n    setNamelist([...nameList, name]);\n    setName(\"\");\n    console.log(nameList);\n  };\n\n  function clearFields(event) {\n    Array.from(event.target).forEach(e => e.value = \"\");\n  }\n\n  function submitFormHandler(event) {\n    // we don't want our page to refresh\n    event.preventDefault(); // print expenses data\n\n    console.log(expensesData); // clear the fields\n\n    clearFields(event); //update our states\n    // why we should update our states to empty string \n    // if we have not done it we clears the fields but we still have the data in our states\n    // if the  user submit the form without any data but our states still has the previous data\n    //update title\n\n    setEnteredTitle(\"\"); //update title\n\n    setEnteredPrice(\"\"); //update title\n\n    setEnteredDate(\"\");\n  }\n\n  useEffect(async () => {\n    const resp = await axios.get(\"/test\");\n    console.log(resp);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          backgroundColor: '#2B4176',\n          minHeight: '100vh',\n          backgroundSize: \"cover\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Secret Santa Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enjoy ~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: nameList.map((n, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: n.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: emailList.map(e => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: e.name\n            }, e.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 36\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              onChange: e => changeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              onChange: e => changeEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Fab, {\n            color: \"primary\",\n            \"aria-label\": \"add\",\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              onClick: appendName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Add people\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Remove people\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"AquN6xPRZBCL9lxL3ZC6JHSn6iU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chenliu/Desktop/project/secret-santa/my-app/src/App.js"],"names":["useEffect","useState","axios","React","Button","Container","ThemeProvider","createTheme","withTheme","blue","green","red","Fab","AddIcon","theme","palette","primary","light","main","dark","contrastText","secondary","App","name","setName","email","setEmail","nameList","setNamelist","emailList","setEmaillist","changeName","value","changeEmail","appendName","console","log","clearFields","event","Array","from","target","forEach","e","submitFormHandler","preventDefault","expensesData","setEnteredTitle","setEnteredPrice","setEnteredDate","resp","get","backgroundColor","minHeight","backgroundSize","map","n","i"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme, withTheme } from '@mui/material/styles';\nimport {blue, green, red} from '@mui/material/colors' ;\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameList, setNamelist] = useState([]);\n  const [emailList, setEmaillist] = useState([]);\n\n  // const changeName = (value) => {\n  //   setName(value);\n  //   setNamelist([...nameList, value]);\n  //   console.log(nameList);\n  // }\n\n  const changeName = (value) => {\n    setName(value);\n  }\n\n  const changeEmail= (value) => {\n    setEmail(value);\n    setEmaillist([...emailList, value]);\n  }\n\n  const appendName = () => {\n    setNamelist([...nameList, name]);\n    setName(\"\");\n    console.log(nameList);\n  }\n  function clearFields(event) {\n    Array.from(event.target).forEach((e) => (e.value = \"\"));\n  }\n  function submitFormHandler(event) {\n    // we don't want our page to refresh\n    event.preventDefault();\n     // print expenses data\n     console.log(expensesData)\n    // clear the fields\n    clearFields(event);\n    //update our states\n    // why we should update our states to empty string \n    // if we have not done it we clears the fields but we still have the data in our states\n    // if the  user submit the form without any data but our states still has the previous data\n    //update title\n    setEnteredTitle(\"\");\n    //update title\n    setEnteredPrice(\"\");\n    //update title\n    setEnteredDate(\"\");\n  }\n\n\n  useEffect(async () => {\n    const resp = await axios.get(\"/test\");\n    console.log(resp);\n  }, [])\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n      <Container\n        style={{\n          backgroundColor: '#2B4176',\n          minHeight : '100vh',\n          backgroundSize: \"cover\",\n        }}\n      >\n        <h1>Secret Santa Generator</h1>\n        <h2>Enjoy ~</h2>\n        <div>\n          <div>\n            \n            {nameList.map((n, i) => <p key={i}>{n.name}</p>)}\n          </div>\n          <p>{emailList.map((e) => <p key={e.name}>{e.name}</p>)}</p>\n        </div>\n        <form>\n          <label>\n            Name:\n            <input \n            type=\"text\" \n            id=\"name\"\n            onChange={(e) => changeName(e.target.value)}/>\n          </label>\n          <label>\n            Email:\n            <input type=\"text\" id=\"email\" onChange={(e) => changeEmail(e.target.value)}/>\n          </label>\n          <Fab color=\"primary\" aria-label=\"add\">\n            <AddIcon onClick={appendName}/>\n          </Fab>\n        </form>\n        <Button variant=\"contained\">Add people\n        </Button>\n        <br></br>\n        <Button variant=\"outlined\">Remove people</Button>\n      {/* </div> */}\n      </Container>\n      </ThemeProvider>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}